// parser_test
package main

import (
	"testing"

	"github.com/bmizerany/assert"
)

func Test_CheckCalledNumber(t *testing.T) {
	assert.Equal(t, checkCalledNumber("01088822200"), true, "01088822200")
	assert.Equal(t, checkCalledNumber("010-88822200"), true, "010-88822200")
	assert.Equal(t, checkCalledNumber("057427614632"), true, "057427614632")
	assert.Equal(t, checkCalledNumber("0574-27614632"), true, "0574-27614632")
	assert.Equal(t, checkCalledNumber("13587010754"), true, "13587010754")

	assert.Equal(t, checkCalledNumber("750140112"), false, "750140112")
	assert.Equal(t, checkCalledNumber("804003801613"), false, "804003801613")
}

func Test_ContinueFail(t *testing.T) {
	gCfg.ConAbnormal = 5
	/*LoadExcelPhoneProductor("NumberShow-201908.xlsx")
	LoadTxtPhoneIsp("phone_area_operators.txt")*/
	cdrs := []string{
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,"}
	idx := 0
	recvCdr := func() string {
		defer func() {
			idx++
		}()
		if idx == len(cdrs) {
			assert.Equal(t, true, false, "end test")
		}
		return cdrs[idx]
	}
	sendAlarm := func(data string) {
		t.Log(data)
		assert.Equal(t, "", data, "")
	}
	ParseCdr(recvCdr, sendAlarm)
}

func Test_TimePolicy(t *testing.T) {
	gCfg.ConAbnormal = 20
	gCfg.TimeMinInterva = 0
	gCfg.Percentage = 0.1
	gCfg.StrategyInfoPath = string("D:\\tmp\\go")
	cdrs := []string{
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115413,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,",
		"025VG24156523773700146038_,2,6420,1336296649111,17600815262,,,20190808115414,20190808115413,20190808115413,5c5d4b9ce418bc38,0251210071,1030-PSTN,0,"}
	idx := 0
	recvCdr := func() string {
		defer func() {
			idx++
		}()
		if idx == len(cdrs) {
			assert.Equal(t, true, false, "end test")
		}
		return cdrs[idx]
	}
	sendAlarm := func(data string) {
		t.Log("data =----------------",data)
		assert.Equal(t, "", data, "")
	}
	ParseCdr(recvCdr, sendAlarm)
}
